/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TaskValidationMessageDto extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4774566270011421429L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TaskValidationMessageDto\",\"namespace\":\"com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation\",\"fields\":[{\"name\":\"level\",\"type\":{\"type\":\"enum\",\"name\":\"TaskValidationMessageLevelDto\",\"symbols\":[\"DEBUG\",\"INFO\",\"WARN\",\"ERROR\"]},\"doc\":\"Message level. Error messages will result in calculation process abort\"},{\"name\":\"objectType\",\"type\":{\"type\":\"enum\",\"name\":\"ObjectTypeDto\",\"symbols\":[\"CONTRACT\",\"DEMAND\",\"TARIFF\"]},\"doc\":\"Type of object that message concerns\"},{\"name\":\"baseObjectName\",\"type\":\"string\",\"doc\":\"Base object name\"},{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Base object ID\"},{\"name\":\"revisionId\",\"type\":\"long\",\"doc\":\"Revision ID\"},{\"name\":\"message\",\"type\":\"string\",\"doc\":\"Validation message explanation\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TaskValidationMessageDto> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TaskValidationMessageDto> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TaskValidationMessageDto> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TaskValidationMessageDto> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TaskValidationMessageDto> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TaskValidationMessageDto to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TaskValidationMessageDto from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TaskValidationMessageDto instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TaskValidationMessageDto fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Message level. Error messages will result in calculation process abort */
  private com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto level;
  /** Type of object that message concerns */
  private com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto objectType;
  /** Base object name */
  private java.lang.CharSequence baseObjectName;
  /** Base object ID */
  private long id;
  /** Revision ID */
  private long revisionId;
  /** Validation message explanation */
  private java.lang.CharSequence message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TaskValidationMessageDto() {}

  /**
   * All-args constructor.
   * @param level Message level. Error messages will result in calculation process abort
   * @param objectType Type of object that message concerns
   * @param baseObjectName Base object name
   * @param id Base object ID
   * @param revisionId Revision ID
   * @param message Validation message explanation
   */
  public TaskValidationMessageDto(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto level, com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto objectType, java.lang.CharSequence baseObjectName, java.lang.Long id, java.lang.Long revisionId, java.lang.CharSequence message) {
    this.level = level;
    this.objectType = objectType;
    this.baseObjectName = baseObjectName;
    this.id = id;
    this.revisionId = revisionId;
    this.message = message;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return level;
    case 1: return objectType;
    case 2: return baseObjectName;
    case 3: return id;
    case 4: return revisionId;
    case 5: return message;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: level = (com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto)value$; break;
    case 1: objectType = (com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto)value$; break;
    case 2: baseObjectName = (java.lang.CharSequence)value$; break;
    case 3: id = (java.lang.Long)value$; break;
    case 4: revisionId = (java.lang.Long)value$; break;
    case 5: message = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'level' field.
   * @return Message level. Error messages will result in calculation process abort
   */
  public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto getLevel() {
    return level;
  }


  /**
   * Sets the value of the 'level' field.
   * Message level. Error messages will result in calculation process abort
   * @param value the value to set.
   */
  public void setLevel(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto value) {
    this.level = value;
  }

  /**
   * Gets the value of the 'objectType' field.
   * @return Type of object that message concerns
   */
  public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto getObjectType() {
    return objectType;
  }


  /**
   * Sets the value of the 'objectType' field.
   * Type of object that message concerns
   * @param value the value to set.
   */
  public void setObjectType(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto value) {
    this.objectType = value;
  }

  /**
   * Gets the value of the 'baseObjectName' field.
   * @return Base object name
   */
  public java.lang.CharSequence getBaseObjectName() {
    return baseObjectName;
  }


  /**
   * Sets the value of the 'baseObjectName' field.
   * Base object name
   * @param value the value to set.
   */
  public void setBaseObjectName(java.lang.CharSequence value) {
    this.baseObjectName = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return Base object ID
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * Base object ID
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'revisionId' field.
   * @return Revision ID
   */
  public long getRevisionId() {
    return revisionId;
  }


  /**
   * Sets the value of the 'revisionId' field.
   * Revision ID
   * @param value the value to set.
   */
  public void setRevisionId(long value) {
    this.revisionId = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return Validation message explanation
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * Validation message explanation
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Creates a new TaskValidationMessageDto RecordBuilder.
   * @return A new TaskValidationMessageDto RecordBuilder
   */
  public static com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder newBuilder() {
    return new com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder();
  }

  /**
   * Creates a new TaskValidationMessageDto RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TaskValidationMessageDto RecordBuilder
   */
  public static com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder newBuilder(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder other) {
    if (other == null) {
      return new com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder();
    } else {
      return new com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder(other);
    }
  }

  /**
   * Creates a new TaskValidationMessageDto RecordBuilder by copying an existing TaskValidationMessageDto instance.
   * @param other The existing instance to copy.
   * @return A new TaskValidationMessageDto RecordBuilder
   */
  public static com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder newBuilder(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto other) {
    if (other == null) {
      return new com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder();
    } else {
      return new com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder(other);
    }
  }

  /**
   * RecordBuilder for TaskValidationMessageDto instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TaskValidationMessageDto>
    implements org.apache.avro.data.RecordBuilder<TaskValidationMessageDto> {

    /** Message level. Error messages will result in calculation process abort */
    private com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto level;
    /** Type of object that message concerns */
    private com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto objectType;
    /** Base object name */
    private java.lang.CharSequence baseObjectName;
    /** Base object ID */
    private long id;
    /** Revision ID */
    private long revisionId;
    /** Validation message explanation */
    private java.lang.CharSequence message;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.level)) {
        this.level = data().deepCopy(fields()[0].schema(), other.level);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.objectType)) {
        this.objectType = data().deepCopy(fields()[1].schema(), other.objectType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.baseObjectName)) {
        this.baseObjectName = data().deepCopy(fields()[2].schema(), other.baseObjectName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.revisionId)) {
        this.revisionId = data().deepCopy(fields()[4].schema(), other.revisionId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.message)) {
        this.message = data().deepCopy(fields()[5].schema(), other.message);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing TaskValidationMessageDto instance
     * @param other The existing instance to copy.
     */
    private Builder(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.level)) {
        this.level = data().deepCopy(fields()[0].schema(), other.level);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.objectType)) {
        this.objectType = data().deepCopy(fields()[1].schema(), other.objectType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.baseObjectName)) {
        this.baseObjectName = data().deepCopy(fields()[2].schema(), other.baseObjectName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.revisionId)) {
        this.revisionId = data().deepCopy(fields()[4].schema(), other.revisionId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.message)) {
        this.message = data().deepCopy(fields()[5].schema(), other.message);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'level' field.
      * Message level. Error messages will result in calculation process abort
      * @return The value.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto getLevel() {
      return level;
    }


    /**
      * Sets the value of the 'level' field.
      * Message level. Error messages will result in calculation process abort
      * @param value The value of 'level'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setLevel(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto value) {
      validate(fields()[0], value);
      this.level = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'level' field has been set.
      * Message level. Error messages will result in calculation process abort
      * @return True if the 'level' field has been set, false otherwise.
      */
    public boolean hasLevel() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'level' field.
      * Message level. Error messages will result in calculation process abort
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearLevel() {
      level = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'objectType' field.
      * Type of object that message concerns
      * @return The value.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto getObjectType() {
      return objectType;
    }


    /**
      * Sets the value of the 'objectType' field.
      * Type of object that message concerns
      * @param value The value of 'objectType'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setObjectType(com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto value) {
      validate(fields()[1], value);
      this.objectType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'objectType' field has been set.
      * Type of object that message concerns
      * @return True if the 'objectType' field has been set, false otherwise.
      */
    public boolean hasObjectType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'objectType' field.
      * Type of object that message concerns
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearObjectType() {
      objectType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'baseObjectName' field.
      * Base object name
      * @return The value.
      */
    public java.lang.CharSequence getBaseObjectName() {
      return baseObjectName;
    }


    /**
      * Sets the value of the 'baseObjectName' field.
      * Base object name
      * @param value The value of 'baseObjectName'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setBaseObjectName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.baseObjectName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'baseObjectName' field has been set.
      * Base object name
      * @return True if the 'baseObjectName' field has been set, false otherwise.
      */
    public boolean hasBaseObjectName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'baseObjectName' field.
      * Base object name
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearBaseObjectName() {
      baseObjectName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * Base object ID
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * Base object ID
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setId(long value) {
      validate(fields()[3], value);
      this.id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Base object ID
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'id' field.
      * Base object ID
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'revisionId' field.
      * Revision ID
      * @return The value.
      */
    public long getRevisionId() {
      return revisionId;
    }


    /**
      * Sets the value of the 'revisionId' field.
      * Revision ID
      * @param value The value of 'revisionId'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setRevisionId(long value) {
      validate(fields()[4], value);
      this.revisionId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'revisionId' field has been set.
      * Revision ID
      * @return True if the 'revisionId' field has been set, false otherwise.
      */
    public boolean hasRevisionId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'revisionId' field.
      * Revision ID
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearRevisionId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * Validation message explanation
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * Validation message explanation
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.message = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * Validation message explanation
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'message' field.
      * Validation message explanation
      * @return This builder.
      */
    public com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageDto.Builder clearMessage() {
      message = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TaskValidationMessageDto build() {
      try {
        TaskValidationMessageDto record = new TaskValidationMessageDto();
        record.level = fieldSetFlags()[0] ? this.level : (com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto) defaultValue(fields()[0]);
        record.objectType = fieldSetFlags()[1] ? this.objectType : (com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto) defaultValue(fields()[1]);
        record.baseObjectName = fieldSetFlags()[2] ? this.baseObjectName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.id = fieldSetFlags()[3] ? this.id : (java.lang.Long) defaultValue(fields()[3]);
        record.revisionId = fieldSetFlags()[4] ? this.revisionId : (java.lang.Long) defaultValue(fields()[4]);
        record.message = fieldSetFlags()[5] ? this.message : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TaskValidationMessageDto>
    WRITER$ = (org.apache.avro.io.DatumWriter<TaskValidationMessageDto>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TaskValidationMessageDto>
    READER$ = (org.apache.avro.io.DatumReader<TaskValidationMessageDto>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.level.ordinal());

    out.writeEnum(this.objectType.ordinal());

    out.writeString(this.baseObjectName);

    out.writeLong(this.id);

    out.writeLong(this.revisionId);

    out.writeString(this.message);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.level = com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto.values()[in.readEnum()];

      this.objectType = com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto.values()[in.readEnum()];

      this.baseObjectName = in.readString(this.baseObjectName instanceof Utf8 ? (Utf8)this.baseObjectName : null);

      this.id = in.readLong();

      this.revisionId = in.readLong();

      this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.level = com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.TaskValidationMessageLevelDto.values()[in.readEnum()];
          break;

        case 1:
          this.objectType = com.github.kacperpotapczyk.pvoptimizer.avro.calculationpreprocessor.validation.ObjectTypeDto.values()[in.readEnum()];
          break;

        case 2:
          this.baseObjectName = in.readString(this.baseObjectName instanceof Utf8 ? (Utf8)this.baseObjectName : null);
          break;

        case 3:
          this.id = in.readLong();
          break;

        case 4:
          this.revisionId = in.readLong();
          break;

        case 5:
          this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










